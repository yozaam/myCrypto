{"id":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","dependencies":[{"name":"/Users/yohaanvakil/Dev/myCrypto/package.json","includedInParent":true,"mtime":1579095240393},{"name":"/Users/yohaanvakil/Dev/myCrypto/.babelrc","includedInParent":true,"mtime":1578387531351},{"name":"/Users/yohaanvakil/Dev/myCrypto/node_modules/@restart/hooks/package.json","includedInParent":true,"mtime":1578477851608},{"name":"./useUpdatedRef","loc":{"line":1,"column":26},"parent":"/Users/yohaanvakil/Dev/myCrypto/node_modules/@restart/hooks/esm/useWillUnmount.js","resolved":"/Users/yohaanvakil/Dev/myCrypto/node_modules/@restart/hooks/esm/useUpdatedRef.js"},{"name":"react","loc":{"line":2,"column":26},"parent":"/Users/yohaanvakil/Dev/myCrypto/node_modules/@restart/hooks/esm/useWillUnmount.js","resolved":"/Users/yohaanvakil/Dev/myCrypto/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useWillUnmount;\n\nvar _useUpdatedRef = _interopRequireDefault(require(\"./useUpdatedRef\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n */\nfunction useWillUnmount(fn) {\n  var onUnmount = (0, _useUpdatedRef.default)(fn);\n  (0, _react.useEffect)(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":9,"column":15}},{"name":"useWillUnmount","generated":{"line":19,"column":9},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":9,"column":24}},{"generated":{"line":19,"column":23},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":9,"column":15}},{"name":"fn","generated":{"line":19,"column":24},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":9,"column":39}},{"generated":{"line":19,"column":26},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":9,"column":15}},{"generated":{"line":19,"column":28},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":9,"column":43}},{"generated":{"line":20,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":2}},{"name":"onUnmount","generated":{"line":20,"column":6},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":6}},{"generated":{"line":20,"column":15},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":15}},{"generated":{"line":20,"column":18},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":18}},{"name":"fn","generated":{"line":20,"column":46},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":32}},{"generated":{"line":20,"column":48},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":18}},{"generated":{"line":20,"column":49},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":10,"column":2}},{"generated":{"line":21,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":11,"column":2}},{"generated":{"line":21,"column":24},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":11,"column":12}},{"generated":{"line":21,"column":36},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":11,"column":24}},{"generated":{"line":22,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":12,"column":4}},{"generated":{"line":22,"column":11},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":12,"column":11}},{"generated":{"line":22,"column":23},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":12,"column":23}},{"generated":{"line":23,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":13,"column":6}},{"name":"onUnmount","generated":{"line":23,"column":13},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":13,"column":13}},{"generated":{"line":23,"column":22},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":13,"column":22}},{"name":"current","generated":{"line":23,"column":23},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":13,"column":23}},{"generated":{"line":23,"column":30},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":13,"column":13}},{"generated":{"line":23,"column":32},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":13,"column":6}},{"generated":{"line":24,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":14,"column":5}},{"generated":{"line":24,"column":5},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":12,"column":4}},{"generated":{"line":25,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":15,"column":3}},{"generated":{"line":25,"column":3},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":11,"column":2}},{"generated":{"line":25,"column":5},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":15,"column":5}},{"generated":{"line":25,"column":7},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":11,"column":2}},{"generated":{"line":26,"column":0},"source":"../../node_modules/@restart/hooks/esm/useWillUnmount.js","original":{"line":16,"column":1}}],"sources":{"../../node_modules/@restart/hooks/esm/useWillUnmount.js":"import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}"},"lineCount":null}},"error":null,"hash":"145fa73277cbca03cba22c1fbcfb36ef","cacheData":{"env":{}}}